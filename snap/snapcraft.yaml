%YAML 1.1
---
name: git-cola
title: Git Cola (UNOFFICIAL)
summary: The highly caffeinated Git GUI
description: |
  git-cola is a powerful Git GUI with a slick and intuitive user interface.

  INFORMATION REGARDING TO SECURITY CONFINEMENT

  User's global Git configuration is not accessible due to Snapd's current limitations.  You may change the in-snap configuration by editing $HOME/snap/git-cola/current/.gitconfig

  You need to connect the snap to the following core snap's interfaces manually in order to gain access to certain functionalities:

  * gpg-keys: For signing commits and tags

        sudo snap connect git-cola:gpg-keys

  * removable-media: For accessing Git repositories under `/media/*` and `/run/media/*`

        sudo snap connect git-cola:removable-media

  * ssh-keys: For remote operation via SSH protocol

        sudo snap connect git-cola:ssh-keys

  BUILD CONFIGURATION

  For `stable` channel the formal release of Git Cola is used, latest development snapshots are periodically published to the `edge` channel

  Information of other Git Cola's dependencies:

  * Blame Viewer: git-gui
  * Diff Tool: Kdiff3
  * Git: From Ubuntu 16.04 software archive
  * Git Annex: From Ubuntu 16.04 software archive
  * Git Large File system: Latest upstream release(only shipped in i386/amd64)
  * History Browser: gitk
  * Merge Tool: Kdiff3

  THIS IS NOT AN OFFICIAL DISTRIBUTION, FOR ANY ISSUE ENCOUNTERED DURING USING THIS SOFTWARE REFER TO:
  https://github.com/Lin-Buo-Ren/git-cola-snap/issues

icon: snap/gui/icon.png
license: GPL-2.0+

adopt-info: git-cola
base: core
confinement: strict
grade: stable

parts:
  # Files to patch the files in the snap
  patching:
    source: snap/local/patching
    plugin: dump
    organize:
      '*': patching/
    prime:
    - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
    - -bin/README.*

  # Programs to modify the behavior of each step of the snapcraft lifecycles
  scriptlets:
    source: snap/local/scriptlets
    plugin: dump
    organize:
      '*': scriptlets/
    prime:
    - -*

  # Ubuntu 16.04 doesn't have python-send2trash
  send2trash:
    plugin: python
    process-dependency-links: false
    python-packages:
    - send2trash
    python-version: python3

  # OPTIONAL: Git Large File System
  git-lfs:
    after:
    - scriptlets

    plugin: nil
    build-packages:
    - wget

    override-pull: 'true'
    override-build: |
      set -eu

      "${SNAPCRAFT_STAGE}"/scriptlets/snapcraft-install-latest-git-lfs-release.bash

  diff-merge-tool:
    plugin: nil
    stage-packages:
    - kdiff3-qt

    override-pull: 'true'

  blame-viewer:
    plugin: nil
    stage-packages:
    - git-gui

    override-pull: 'true'

  git-annex:
    plugin: nil
    stage-packages:
    - git-annex

    override-pull: 'true'

  history-browser:
    plugin: nil
    stage-packages:
    - gitk

    override-pull: 'true'

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
    - dpkg-dev
    stage-packages:
    - libxkbcommon0
    - ttf-ubuntu-font-family
    - shared-mime-info
    - libqt5gui5
    - libgdk-pixbuf2.0-0
    - libqt5svg5 # for loading icon themes which are svg
    - try: [appmenu-qt5] # not available on core18
    - locales-all
    - xdg-user-dirs
    - fcitx-frontend-qt5
    #- qt5-gtk-platformtheme

  # Check out the tagged release revision if it isn't promoted to the stable channel
  # https://forum.snapcraft.io/t/selective-checkout-check-out-the-tagged-release-revision-if-it-isnt-promoted-to-the-stable-channel/10617
  selective-checkout:
    plugin: nil
    stage-snaps:
    - selective-checkout
    prime:
    - -*

  git-cola:
    after:
    - patching
    - selective-checkout

    build-packages:
    - gettext
    - make
    - rsync

    # REPLACED: By Python 3 counterparts
    #- python
    #- python-pyqt5
    #- python-sphinx

    - python3
    - python3-pyqt5
    - python3-sphinx
    stage-packages:
    # `git stash` requires git-sh-i18n requires gettext.sh in PATH
    - gettext-base

    - git-core
    - libdb5.3

    # Required by ssh-askpass
    - libtcl8.6

    # Required by ssh-askpass(command: wish)
    - tk

    # REPLACED: By Python 3 counterparts
    #- python
    #- python-pyqt5

    - python3
    - python3-pyqt5

    # REPLACED: by send2trash part
    #- python3-send2trash

    # For `ssh-agent`
    - openssh-client

    source: https://github.com/git-cola/git-cola.git
    source-depth: 200
    override-pull: |
      set -o nounset

      snapcraftctl pull
      "${SNAPCRAFT_STAGE}"/scriptlets/selective-checkout \
        --append-packaging-revision

    plugin: make
    make-parameters:
    - DESTDIR=$SNAPCRAFT_PART_INSTALL
    - prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current
    - PYTHON=python3
    - install-doc
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current/: /
    filesets:
      additional-executables:
      - share/git-cola/bin/*
      appdata:
      - share/appdata/*
      desktop-entries:
      - share/applications/*
      documentation:
      - share/doc/git-cola/*
      executables:
      - bin/*
      icons:
      - share/git-cola/icons/*
      libraries:
      - share/git-cola/lib/*
      localization:
      - share/locale/*

    override-stage: |
      set -eu

      snapcraftctl stage

      # Patch desktop entries
      sed \
        --file "${SNAPCRAFT_STAGE}"/patching/patch-desktop-entries.sed \
        --in-place \
        "${SNAPCRAFT_STAGE}"/share/applications/*.desktop

      # Patch executable shebangs
      # https://github.com/git-cola/git-cola/issues/850
      sed \
        --file "${SNAPCRAFT_STAGE}"/patching/patch-git-cola-shebang.sed \
        --in-place \
        "${SNAPCRAFT_STAGE}"/bin/git-cola \
        "${SNAPCRAFT_STAGE}"/bin/git-dag
    override-prime: |
      set -eu

      snapcraftctl prime

      ln \
        --force \
        --symbolic \
        python3 \
        "${SNAPCRAFT_PRIME}"/usr/bin/python

      # Now that everything is built, let's disable user site-packages
      # as stated in PEP-0370
      sed \
        --in-place \
        --expression='s/^ENABLE_USER_SITE = None$/ENABLE_USER_SITE = False/' \
        "${SNAPCRAFT_PRIME}"/usr/lib/python3.5/site.py

      # This is the last step, let's now compile all our pyc files.
      # 0 --workers: Use all available CPU threads
      "${SNAPCRAFT_PRIME}"/usr/bin/python3 \
        -m compileall \
        -qq \
        --workers 0 \
        "${SNAPCRAFT_PRIME}" \
        || true # May fail on Python 3 incompatible code

apps:
  git-cola:
    adapter: full
    command: bin/git-cola
    command-chain: &command-chain-common
    - bin/desktop-launch
    - bin/perl-launch
    - bin/tcltk-launch
    - bin/ssh-agent-launch
    - bin/git-launch
    - bin/git-cola-launch
    desktop: share/applications/git-cola.desktop

  git-dag:
    adapter: full
    command: bin/git-dag
    command-chain: *command-chain-common
    desktop: share/applications/git-dag.desktop

  git-cola-folder-handler:
    adapter: full
    command: bin/git-cola --repo
    command-chain: *command-chain-common
    desktop: share/applications/git-cola-folder-handler.desktop

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # Application-specific files access
  # The auto-connection requires store grant
  # https://forum.snapcraft.io/t/the-personal-files-interface/9357
  # https://forum.snapcraft.io/t/the-system-files-interface/9358
  #config-git-cola:
    #interface: personal-files
    #read:
    #- $HOME/.config/git-cola

  # Common desktop interfaces
  # https://forum.snapcraft.io/t/the-desktop-interfaces/2042
  desktop:
  desktop-legacy:
  unity7:
  wayland:

  # Gtk Common Themes support
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gsettings:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

  # For signing commits and tags
  gpg-keys: # Non-autoconnect

  # Regular files access
  home:
  removable-media: # Non-A/C

  # Make Qt happy
  opengl:

  # SSH remote support
  ssh-keys: # Non-autoconnect

  # Network access
  network:
